# Drupal-friendly configuration to use Nginx as a reverse-proxy.
#

server {
  listen 80 default;
  root '<%= node['drupal']['docroot']  %>';

  gzip_static on;

  location ~ ^\. {
    deny all;
  }
  location ~ \.(engine|inc|info|install|module|profile|po|sh|.*sql|theme|tpl(\.php)?|xtmpl)$|^(code-style\.pl|Entries.*|Repository|Root|Tag|Template)$ {
    deny all;
  }

  # only serve request if method is GET or HEAD
  if ( $request_method !~ ^(GET|HEAD) ) {
    return 404;
  }

  # try and serve css and js files
  location ~* \.(css|js)(\.gz)?$ {
    try_files $uri @drupal;
    break;
  }
  # try and serve document files
  # only serve documents from the files directory
  location ~* ^/sites/.*/files/.*\.(html|xml|txt|pdf|ps|doc|htm|zip|bz2|tar|tgz|rar|xls|docx|djvu|rtf)(\.gz)?$ {
    try_files $uri @drupal;
    break;
  }
  # try and serve multimedia files
  location ~* \.(jpg|jpeg|gif|png|ico|bmp|flv|mp3|wmv|wma|wav|ogg|mpg|mpeg|mpg4|avi|mp4)(\.gz)?$ {
    try_files $uri @drupal;
    break;
  }

  # fallback on Drupal for 404
  error_page 404 = @drupal;

  # reverse proxy headers
  proxy_set_header X-Real-IP  $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header Host $http_host;

  location / {
    access_log <%= node['nginx']['log_dir'] %>/proxy.access.log;
    proxy_pass http://127.0.0.1:<%= node['drupal']['apache_port']%>;
  }

  # Define named location @drupal, proxy to Apache
  location @drupal{
    access_log <%= node['nginx']['log_dir'] %>/proxy.access.log;
    proxy_pass http://127.0.0.1:<%= node['drupal']['apache_port']%>;
  }

}
